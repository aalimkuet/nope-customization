@model ArticleCommentSearchModel
@using Microsoft.AspNetCore.Routing

@{
    Layout = "_AdminLayout";
    //page title
    ViewBag.PageTitle = T("Admin.NopStation.Documentation.Article.Comments.List").Text;
    //active menu item (system name)
    NopHtml.SetActiveMenuItemSystemName("Documentation.Comments");
}

@{
    const string hideSearchBlockAttributeName = "ArticleCommentsPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.NopStation.Documentation.Article.Comments.List")
    </h1>
    <div class="float-right">
        <button type="button" id="approve-selected" class="btn bg-green">
            <i class="fa fa-check-square-o"></i>
            @T("Admin.NopStation.Documentation.Article.Comments.ApproveSelected")
        </button>
        <button type="button" id="disapprove-selected" class="btn bg-navy">
            <i class="fa fa-minus-square-o"></i>
            @T("Admin.NopStation.Documentation.Article.Comments.DisapproveSelected")
        </button>
        <button type="button" id="delete-selected" class="btn bg-red">
            <i class="fa fa-trash-o"></i>
            @T("Admin.NopStation.Documentation.Article.Comments.DeleteSelected")
        </button>
        <nop-action-confirmation asp-button-id="delete-selected" />
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fa fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="fa fa-angle-down" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchArticleId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="SearchArticleId" asp-items="Model.AvailableArticles" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="CreatedOnFrom" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="CreatedOnFrom" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="CreatedOnTo" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="CreatedOnTo" />
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchApprovedId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="SearchApprovedId" asp-items="Model.AvailableApprovedOptions" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchText" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchText" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-7 offset-md-5">
                                    <button type="button" id="search-comments" class="btn btn-primary btn-search">
                                        <i class="fa fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                            Name = "article-comment-grid",
                            UrlRead = new DataUrl("CommentList", "DocumentArticle", new RouteValueDictionary { [nameof(Model.SearchArticleId)] = Model.SearchArticleId}),
                            UrlDelete = new DataUrl("DeleteComment", "DocumentArticle", null),
                            UrlUpdate = new DataUrl("UpdateComment", "DocumentArticle", null),
                            Length = Model.PageSize,
                            LengthMenu = Model.AvailablePageSizes,
                            Filters = new List<FilterParameter>
                            {
                                new FilterParameter(nameof(Model.SearchApprovedId)),
                                new FilterParameter(nameof(Model.SearchText)),
                                new FilterParameter(nameof(Model.SearchArticleId)),
                                new FilterParameter(nameof(Model.CreatedOnFrom)),
                                new FilterParameter(nameof(Model.CreatedOnTo))
                            },
                            ColumnCollection = new List<ColumnProperty>
                            {
                                new ColumnProperty(nameof(ArticleCommentModel.Id))
                                {
                                    IsMasterCheckBox = true,
                                    Render = new RenderCheckBox("checkbox_comments"),
                                    ClassName =  NopColumnClassDefaults.CenterAll,
                                    Width = "50"
                                },
                                new ColumnProperty(nameof(ArticleCommentModel.CommentText))
                                {
                                    Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.CommentText").Text,
                                    Editable = true,
                                    EditType = EditType.String
                                },
                                new ColumnProperty(nameof(ArticleCommentModel.CustomerName))
                                {
                                    Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.Customer").Text,
                                    Width = "150",
                                    Render = new RenderLink(new DataUrl("~/Admin/Customer/Edit/", nameof(ArticleCommentModel.CustomerId)))
                                },
                                new ColumnProperty(nameof(ArticleCommentModel.Article))
                                {
                                    Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.Article").Text,
                                    Width = "200",
                                    Render = new RenderLink(new DataUrl("~/Admin/DocumentArticle/Edit/", nameof(ArticleCommentModel.ArticleId)))
                                },
                                new ColumnProperty(nameof(ArticleCommentModel.CreatedOn))
                                {
                                    Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.CreatedOn").Text,
                                    Width = "150",
                                    Render = new RenderDate()
                                },
                                new ColumnProperty(nameof(ArticleCommentModel.IsApproved))
                                {
                                    Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.IsApproved").Text,
                                    Width = "100",
                                    Render = new RenderBoolean(),
                                    ClassName = NopColumnClassDefaults.CenterAll,
                                    Editable = true,
                                    EditType = EditType.Checkbox
                                },
                                new ColumnProperty(nameof(ArticleCommentModel.Id))
                                {
                                    Title = T("Admin.Common.Edit").Text,
                                    Width = "200",
                                    ClassName =  NopColumnClassDefaults.Button,
                                    Render = new RenderButtonsInlineEdit()
                                },
                                new ColumnProperty(nameof(ArticleCommentModel.Id))
                                {
                                    Title = T("Admin.Common.Delete").Text,
                                    Width = "100",
                                    Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                                    ClassName = NopColumnClassDefaults.Button
                                }
                            }
                        })

                        <script>
                            $(document).ready(function() {
                                //"delete selected" button
                                $("#delete-selected-action-confirmation-submit-button").bind("click", function () {
                                    var postData = {
                                        selectedIds: selectedIds
                                    };
                                    addAntiForgeryToken(postData);
                                    $.ajax({
                                        cache: false,
                                        type: "POST",
                                        url: "@(Url.Action("DeleteSelectedComment", "DocumentArticle"))",
                                        data: postData,
                                        error: function (jqXHR, textStatus, errorThrown) {
                                            $('#deleteSelectedCommentsFailed-info').text(errorThrown);
                                            $("#deleteSelectedCommentsFailed").click();
                                        },
                                        complete: function (jqXHR, textStatus) {
                                            updateTable('#article-comment-grid');
                                        }
                                    });
                                    $('#delete-selected-action-confirmation').modal('toggle');
                                    return false;
                                });

                                //"approve selected" button
                                $('#approve-selected').click(function(e) {
                                        e.preventDefault();

                                        var postData = {
                                            selectedIds: selectedIds
                                        };
                                        addAntiForgeryToken(postData);

                                        $.ajax({
                                            cache: false,
                                            type: "POST",
                                            url: "@(Url.Action("ApproveSelectedComment", "DocumentArticle"))",
                                            data: postData,
                                            traditional: true,
                                            error: function (jqXHR, textStatus, errorThrown) {
                                                $('#approveSelectedFailed-info').text(errorThrown);
                                                $("#approveSelectedFailed").click();
                                            },
                                            complete: function (jqXHR, textStatus) {
                                                updateTable('#article-comment-grid');
                                            }
                                        });
                                        return false;
                                    });

                                //"disapprove selected" button
                                $('#disapprove-selected').click(function(e) {
                                        e.preventDefault();

                                        var postData = {
                                            selectedIds: selectedIds
                                        };
                                        addAntiForgeryToken(postData);

                                        $.ajax({
                                            cache: false,
                                            type: "POST",
                                            url: "@(Url.Action("DisapproveSelectedComment", "DocumentArticle"))",
                                            data: postData,
                                            traditional: true,
                                            error: function (jqXHR, textStatus, errorThrown) {
                                                $('#disapproveSelectedFailed-info').text(errorThrown);
                                                $("#disapproveSelectedFailed").click();
                                            },
                                            complete: function (jqXHR, textStatus) {
                                                updateTable('#article-comment-grid');
                                            }
                                        });
                                        return false;
                                    });
                            });
                        </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<nop-alert asp-alert-id="deleteSelectedCommentsFailed" />
<nop-alert asp-alert-id="approveSelectedFailed" />
<nop-alert asp-alert-id="disapproveSelectedFailed" />

