@model ArticleCommentSearchModel
@using Microsoft.AspNetCore.Routing

<div class="card-body">
    @await Html.PartialAsync("Table", new DataTablesModel
    {
        Name = "comments-grid",
        UrlRead = new DataUrl("CommentList", "DocumentArticle", new RouteValueDictionary { [nameof(Model.SearchArticleId)] = Model.SearchArticleId }),
        UrlDelete = new DataUrl("DeleteComment", "DocumentArticle", null),
        UrlUpdate = new DataUrl("UpdateComment", "DocumentArticle", null),
        Length = Model.PageSize,
        LengthMenu = Model.AvailablePageSizes,
        ColumnCollection = new List<ColumnProperty>
        {
            new ColumnProperty(nameof(ArticleCommentModel.CommentText))
            {
                Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.CommentText").Text,
                Editable = true,
                EditType = EditType.String
            },
            new ColumnProperty(nameof(ArticleCommentModel.CustomerName))
            {
                Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.Customer").Text,
                Width = "150",
                Render = new RenderLink(new DataUrl("~/Admin/Customer/Edit/", nameof(ArticleCommentModel.CustomerId)))
            },
            new ColumnProperty(nameof(ArticleCommentModel.Article))
            {
                Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.Article").Text,
                Width = "200",
                Render = new RenderLink(new DataUrl("~/Admin/DocumentArticle/Edit/", nameof(ArticleCommentModel.ArticleId)))
            },
            new ColumnProperty(nameof(ArticleCommentModel.CreatedOn))
            {
                Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.CreatedOn").Text,
                Width = "150",
                Render = new RenderDate()
            },
            new ColumnProperty(nameof(ArticleCommentModel.IsApproved))
            {
                Title = T("Admin.NopStation.Documentation.Article.Comments.Fields.IsApproved").Text,
                Width = "100",
                Render = new RenderBoolean(),
                ClassName = NopColumnClassDefaults.CenterAll,
                Editable = true,
                EditType = EditType.Checkbox
            },
            new ColumnProperty(nameof(ArticleCommentModel.Id))
            {
                Title = T("Admin.Common.Edit").Text,
                Width = "200",
                ClassName =  NopColumnClassDefaults.Button,
                Render = new RenderButtonsInlineEdit()
            },
            new ColumnProperty(nameof(ArticleCommentModel.Id))
            {
                Title = T("Admin.Common.Delete").Text,
                Width = "100",
                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                ClassName = NopColumnClassDefaults.Button
            }
        }
    })
</div>